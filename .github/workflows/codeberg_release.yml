name: Build and release

on:
  push:
    tags:
      - "v[0-9]+.*"

env:
  FORGEJO_API: https://codeberg.org/api/v1

jobs:
  # 独立验证作业
  validate:
    name: Validate prerequisites
    runs-on: codeberg-tiny
    steps:
      - name: Verify tag format
        run: |
          if ! [[ "${{ github.ref }}" =~ ^refs/tags/v[0-9]+\..* ]]; then
            echo "::error::Invalid tag format (should be vX.Y.Z)"
            exit 1
          fi
          echo "Tag format is valid"

      - name: Check Rust toolchain
        run: rustc --version

  # 创建发布
  create_release:
    name: Create release
    runs-on: codeberg-tiny
    needs: validate
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Extract tag name
        id: vars
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create release
        id: create_release
        uses: actions/gitea-release@v1
        env:
          FORGEJO_TOKEN: ${{ secrets.FORGEJO_TOKEN }}
        with:
          api_url: ${{ env.FORGEJO_API }}
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            ## Lumesh ${{ steps.vars.outputs.tag }}
            [Changelog](https://codeberg.org/santo/lumesh/src/tag/${{ steps.vars.outputs.tag }}/CHANGELOG.md)

            ### contains
            - lume: an edition contains interactive repl and script parser.
            - lumesh: an swift edition only contains script parser. used to run script swiftly.
            - doc: help docs.
  # 文档构建
  build_docs:
    name: Build documentation
    needs: create_release
    runs-on: codeberg-tiny
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Prepare documentation
        run: |
          mkdir -p dist/doc
          cp -r LICENSE README.md CHANGELOG.md src/binary/help src/config/config.lsh dist/doc/
          tar czvf doc.tar.gz -C dist/doc .

      - name: Upload documentation
        uses: actions/gitea-upload-release@v1
        env:
          FORGEJO_TOKEN: ${{ secrets.FORGEJO_TOKEN }}
        with:
          api_url: ${{ env.FORGEJO_API }}
          release_id: ${{ needs.create_release.outputs.release_id }}
          file: doc.tar.gz
          asset_name: lumesh-docs-${{ needs.create_release.outputs.tag }}.tar.gz

  # 二进制构建
  build_binaries:
    name: Build binaries
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [codeberg-tiny, macos-latest, windows-latest]
        include:
          - os: codeberg-tiny
            platform: linux
            ext: ""
          - os: macos-latest
            platform: macos
            ext: ""
          - os: windows-latest
            platform: windows
            ext: ".exe"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build release binaries
        run: |
          cargo build --release --locked
          cargo build --features runner --release

      - name: Upload lume binary
        uses: actions/gitea-upload-release@v1
        env:
          FORGEJO_TOKEN: ${{ secrets.FORGEJO_TOKEN }}
        with:
          api_url: ${{ env.FORGEJO_API }}
          release_id: ${{ needs.create_release.outputs.release_id }}
          file: target/release/lume${{ matrix.ext }}
          asset_name: lume-${{ matrix.platform }}-${{ needs.create_release.outputs.tag }}${{ matrix.ext }}

      - name: Upload lumesh binary
        uses: actions/gitea-upload-release@v1
        env:
          FORGEJO_TOKEN: ${{ secrets.FORGEJO_TOKEN }}
        with:
          api_url: ${{ env.FORGEJO_API }}
          release_id: ${{ needs.create_release.outputs.release_id }}
          file: target/release/lumesh${{ matrix.ext }}
          asset_name: lumesh-${{ matrix.platform }}-${{ needs.create_release.outputs.tag }}${{ matrix.ext }}
