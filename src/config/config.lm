# ========== config for login mode ==========
# only login mode need PATH, other mode will retrieve it from parent shell.
if IS_LOGIN {
    let PATH = "/usr/local/bin:/usr/bin:/bin"
}

# ========== config for interactive mode ==========
if IS_INTERACTIVE {
    let logo = "
            ██╗     ██╗   ██╗███╗   ███╗███████╗
            ██║     ██║   ██║████╗ ████║██╔════╝
            ██║     ██║   ██║██╔████╔██║█████╗
            ██║     ██║   ██║██║╚██╔╝██║██╔══╝
            ███████╗╚██████╔╝██║ ╚═╝ ██║███████╗
            ╚══════╝ ╚═════╝ ╚═╝     ╚═╝╚══════╝
    "
    print fmt@faint(fmt@green(logo))

    # ====== default repl mode
    # LUME_VI_MODE = true

    # ====== default strict mode
    # let IS_STRICT = true

    # ====== welcome msg
    # let LUME_WELCOME= "Welcome to Lumesh!"

    # ====== prompt
    # MODE: 1=use template; 2=use starship; 0=use default.
    let LUME_PROMPT_SETTINGS = {
        MODE: 1,
        TTL_SECS: 2
    }
    # template could be normal expression or func.
    # avaluable tmplate var: $CWD, $CWD_SHORT
    let LUME_PROMPT_TEMPLATE = (fmt.blue("$CWD_SHORT") + fmt.yellow(fmt.bold(">> ")))
    # if template is lambda/func, it will be evaluated everytime.
    # let LUME_PROMPT_TEMPLATE := x -> {
    #     fmt.format "{} {}{}{} " fmt.blue(x) fmt.green(fmt.bold("|")) \
    #     (if (fs.exists '.git') {git branch --show-current | fmt.cyan()} else "") \
    #     fmt.green(fmt.bold(">"))
    # }
    # ====== history file
    # let LUME_HISTORY_FILE = "/tmp/lume_histroy"

    # ====== report compute result type and values. default True.
    # let LUME_PRINT_DIRECT= False

    # ====== default AI Helper settings. following is default.
    let LUME_AI_CONFIG = {
        host: "localhost:11434",
        complete_url: "/completion",
        chat_url: "/v1/chat/completions",
        complete_max_tokens: 10,
        chat_max_tokens: 100,
        model: "",
        system_prompt: "you're a lumesh shell script helper",
    }

    # ====== sudo cmd for Alt+s
    let LUME_SUDO_CMD = "doas"

    # ====== key bindings
    # NONE:0, SHIFT:2, ALT:4, CTRL:8,
    # ALT_SHIFT:6, CTRL_SHIFT: 10, CTRL_ALT:12, CTRL_ALT_SHIFT:14
    let LUME_HOT_MODIFIER = 4
    let LUME_HOT_KEYS = {
        q: "exit",
        c: "clear",
        h: "fs.read /tmp/lume_histroy | fzf --preview '' | exec_str()",
        x: "fs.read /tmp/bookmark | fzf --preview '' | exec_str()",
        m: 'let cmd := "$CMD_CURRENT";let s = into.str(cmd); if s!="" {s+"\n" >> /tmp/bookmark;println "\t[MARKED]"}',
    }

    # ====== abbreviations
    let LUME_ABBREVIATIONS = {
        xi: 'doas pacman -S',
        xup: 'doas pacman -Syu',
        xq: 'pacman -Q',
        xs: 'pacman -Ss',
        xr: 'doas pacman -Rs',
    }

    # ====== alias
    alias int = into.int
    alias str = into.str
    alias each = list.map()
    alias sort = list.sort()
    alias group = list.group()
    alias table = parse.cmd()
    alias format = fmt.format()
    alias ll = fs.ls -l
    alias lsx = ls -l --time-style=long-iso
    alias pls = parse.cmd(mode,hlink,user,group,size,mday,mtime,name)
    alias join = list.join()
    alias chars = string.chars
    alias open = fs.read()
}
# else {
# ========== config for script mode ==========

# }

# ========== config for all mode ==========
let concat = (x, y) -> (str x) + (str y)
